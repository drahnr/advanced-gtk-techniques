<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      id="dynamic-actions">
<info>
  <link type="guide" xref="index"/>
  <link type="next" xref="custom-container"/>
</info>
<title>Using dynamic menu and toolbar actions</title>

<p>There are several ways to design and build the graphical interface for your GTK program.
Glade 3 is by far the best if your interface has any degree of complication at all.
However, the menu editor in Glade does not take advantage of the advanced features for menus and toolbars added in GTK 2.4, such as action groups and accelerator maps.
These features are explained in <em>Foundations</em>, but not how to use them in combination with Glade.
A serious application, big enough to require Glade for its design, will often want to do things like:</p>

<list>
  <item>
    <p>Change the "sensitive" status of some actions like Cut and Copy, depending on whether there is text selected in the application;</p>
  </item>
  <item>
    <p>Programmatically change the contents of menus;</p>
  </item>
  <item>
    <p>Have customizable toolbars and keyboard shortcuts.</p>
  </item>
</list>

<p>The latter facility, for example, is easily enabled in Mac OS X applications designed with Apple's Interface Builder for Cocoa.
The infrastructure for it is there in GTK, just not as easily accessible.
Glade's menu and toolbar editor doesn't build its menus using <code>GtkAction</code>s, even though <code>GtkBuilder</code> is capable of constructing them from XML files.
This functionality will appear in the future, when Glade is able to write <code>GtkBuilder</code> XML files.</p>

<p>Until then, some trickery is required, and some extra dialogues must be constructed.
We will build an example application with ridiculous do-nothing actions inspired by the Beatles' <em>Ballad of Rocky Raccoon</em>, about a young man who fights a duel to win back his lady love.
Our program will take special note of the fact that</p>

<quote>
  <p>Her name was Magill / 
  and she called herself Lil / 
  but everyone knew her as Nancy;</p>
</quote> 

<p><code>GtkAction</code>s can also be known by more than one name.</p>

<section id="interface">
<title>Building the interface</title>

<p>First we will build the interface using Glade 3, and call it <file>rocky.ui</file>.
Here is a screenshot of the various windows we built in Glade.</p>

<media type="image" src="rocky-screenshot.png">
  <p>(Screenshots of the Rocky Raccoon user interface)</p>
</media>

<p>There is a main application window and an about dialog.
For details, see the file itself, included in the code distribution, or load the file in Glade.</p>

<p>You will notice that the main application window does not contain a menu bar or a toolbar. 
That is because we will automatically generate these from an XML file with the menu structure, which we will write in the next section.
It is also important to notice that the text view (representing the actual application widget, whatever it may be) and the status bar are end-packed into their containing <code>GtkVBox</code>; that is, they appear below any start-packed widgets.
This is convenient because we can then start-pack the menu bar and toolbar, and not have to worry about where to insert them.</p>

</section>
<section>
<title>Building the menu structure</title>

The menus and

</section>
</page>
